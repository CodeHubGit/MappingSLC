body,
html {
    height: 100%;
    width: 100%; /* If you don't do this, gremlins will eat your nose. */
}

body {
    min-height: 100%; height: 100%;
}


ul {
    margin-top: 20px;
    list-style-type: none;
}

.navbar-brand, .navbar-nav, li a {
    color: #f5deb3;
    background: rgba(0, 0, 0, 0.0);
}

 .dropdown-toggle {
    background: rgba(0, 0, 0, 0.0);
}

.dropdown-menu, .divider, .nav, .nav .open a, .nav .open a:hover, .nav .open a:focus, a:hover, a:focus,
.nav li a:hover, .nav li a:focus {
    color: #f5deb3;
    background: rgba(0, 0, 0, 0.6);
}

.undecorated-link:hover {
	text-decoration: none;
}

[ng\:cloak], [ng-cloak], [data-ng-cloak], [x-ng-cloak], .ng-cloak, .x-ng-cloak {
	display: none !important;
}

.ng-invalid.ng-dirty{
    border-color:#FA787E;
}

.ng-valid.ng-dirty{
    border-color:#78FA89;
}

.footer {
    bottom: 0;
    width: 100%;
    /* position: absolute;
    /* Set the fixed height of the footer here */
    height: 150px;
    background-color: #4C4846;
}

.footer-link {
    width: 100%;
    text-align: center;
}

/*
/ creates On/Off Toggle switch
*/
.switch-on{
    background: #023a31;
    border: 2px solid #fff;
    border-radius: 50%;
    color: #fff;
    cursor: pointer;
    font-size: 1.4em;
    height: 50px;
    left: -25px;
    line-height: 50px;
    position: absolute;
    text-align: center;
    top: -25px;
    width: 50px;
}

.switch-on:hover{
    background: rgba(0, 0, 0, 0.8);
}

.switch-off {
    background: rgba(0, 0, 0, 0.4);
    border: 2px solid rgba(0, 0, 0, 0.8);
    border-radius: 15%;
    color: #fff;
    cursor: pointer;
    font-size: 1.4em;
    height: 40px;
    left: -615px;
    line-height: 30px;
    position: absolute;
    text-align: center;
    top: -25px;
    width: 60px;
}

.switch-off:hover {
    background: rgba(0, 0, 0, 0.8);
    border: 5px solid rgba(255, 255, 255, 0.4);
}

#gmap {
    height: 100%;
    left: 0;
    position: fixed !important; /* Acts in pretty much the same way as background-attachment: fixed for an image background. Has to be !important only if you're using the Google Maps API. */
    top: 0;
    width: 100%;
    z-index: 1; /* Has to be at least one increment smaller in value than the container's z-index */
}

#containerOn{
    background: rgba(0, 0, 0, 0.8);
    border-radius: 20px;
    border: 3px solid #fff;
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);
    margin: 35px auto;
    overflow: visible !important; /* Has to be !important only if you're using an on/off switch */
    padding: 0 20px 20px 20px;
    position: relative;
    width: 80%;
    height: 40em;
    z-index: 2;
}

#containerOff {
    background: rgba(0, 0, 0, 0.0);
    margin: 0 auto;
    overflow: visible !important; /* Has to be !important only if you're using an on/off switch */
    padding: 4px;
    position: relative;
    top: 100px;
    width: 25px;
    height: 25px;
    z-index: 2;
}

.home{
    text-align: justify;
  }

.home .page-header{
    margin: 20px 0 10px 0;
}

.logo {
    padding: 0 0 25px 50px;
}

/*.page-header .content {*/
    /*margin-top: 0;*/
/*}*/

.home-text {
    color: #f5deb3;
}

.btn-main {
    cursor:pointer;
    /*border-radius: 5px;*/
    /*display:inline-block;*/
    /*padding:10px;*/
    /*margin: 5px;*/
    border:2px solid #fff;
    background: #023a31;
}

.btn-main:focus, .btn-main:hover {
    background: #023a31;
    border: 4px solid #fff;
}

.photo {
    padding: 15px;
}




/*
//
//
*/


.grid {
    /*padding: 20px;*/
    max-width: 1300px;
    margin: 0 auto;
    list-style: none;
    /*text-align: center;*/
    display: inline;

}

.grid li {
    display: inline;
    width: 150px;
    margin: 0;
    padding: 0;
    text-align: left;
    position: relative;
}

.grid figure {
    margin: 0;
    position: relative;
}

.grid figure img {
    max-width: 100%;
    display: inline;
    position: relative;
}

.grid figcaption {
    position: absolute;
    top: 0;
    left: 0;
    padding: 20px;
    background: #2c3f52;
    color: #ed4e6e;
}

.grid figcaption h3 {
    margin: 0;
    padding: 0;
    color: #fff;
}

/*.grid figcaption span:before {*/
    /*content: 'by ';*/
/*}*/

.grid figcaption a {
    text-align: center;
    padding: 5px 10px;
    border-radius: 2px;
    display: inline-block;
    background: #ed4e6e;
    color: #fff;
}

/* Individual Caption Styles */

.cs-style-4 li {
    -webkit-perspective: 1700px;
    -moz-perspective: 1700px;
    perspective: 1700px;
    -webkit-perspective-origin: 0 50%;
    -moz-perspective-origin: 0 50%;
    perspective-origin: 0 50%;
}

.cs-style-4 figure {
    -webkit-transform-style: preserve-3d;
    -moz-transform-style: preserve-3d;
    transform-style: preserve-3d;
}

.cs-style-4 figure > div {
    overflow: hidden;
}

.cs-style-4 figure img {
    -webkit-transition: -webkit-transform 0.4s;
    -moz-transition: -moz-transform 0.4s;
    transition: transform 0.4s;
}

.no-touch .cs-style-4 figure:hover img,
.cs-style-4 figure.cs-hover img {
    -webkit-transform: translateX(25%);
    -moz-transform: translateX(25%);
    -ms-transform: translateX(25%);
    transform: translateX(25%);
}

.cs-style-4 figcaption {
    height: 100%;
    width: 100%;
    opacity: 0;
    -webkit-backface-visibility: hidden;
    -moz-backface-visibility: hidden;
    backface-visibility: hidden;
    -webkit-transform-origin: 0 0;
    -moz-transform-origin: 0 0;
    transform-origin: 0 0;
    -webkit-transform: rotateY(-90deg);
    -moz-transform: rotateY(-90deg);
    transform: rotateY(-90deg);
    -webkit-transition: -webkit-transform 0.4s, opacity 0.1s 0.3s;
    -moz-transition: -moz-transform 0.4s, opacity 0.1s 0.3s;
    transition: transform 0.4s, opacity 0.1s 0.3s;
}

.no-touch .cs-style-4 figure:hover figcaption,
.cs-style-4 figure.cs-hover figcaption {
    opacity: 1;
    -webkit-transform: rotateY(0deg);
    -moz-transform: rotateY(0deg);
    transform: rotateY(0deg);
    -webkit-transition: -webkit-transform 0.4s, opacity 0.1s;
    -moz-transition: -moz-transform 0.4s, opacity 0.1s;
    transition: transform 0.4s, opacity 0.1s;
}

.cs-style-4 figcaption a {
    position: absolute;
    bottom: 20px;
    right: 20px;
}

figure {
    width: 150px;
}

.grid li {
    margin: 0;
    padding: 10px;
}

.grid .cs-style-4 {
    width: 150px;
    /*margin-left: 0px;*/
    /*margin-right: 0px;*/
    /*padding-left: 0px;*/
    /*padding-right: 0px;*/
    /*padding-bottom: 0px;*/
    /*padding-top: 0px;*/
}

@media screen and (max-width: 31.5em) {
    .grid {
        padding: 10px;
    }
    .grid li {
        width: 100%;
        min-width: 150px;
    }
}

